{
  "name": "BOQ - Automatic PDF Processing",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "boq-document-upload",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-trigger",
      "name": "Webhook - Document Upload",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [250, 300],
      "webhookId": "boq-doc-upload"
    },
    {
      "parameters": {
        "url": "=http://host.docker.internal:8000/ai/documents/process/{{ $json.document_id }}",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $json.token }}"
            }
          ]
        },
        "options": {
          "timeout": 300000
        }
      },
      "id": "process-document",
      "name": "Process Document",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [470, 300]
    },
    {
      "parameters": {
        "url": "=http://host.docker.internal:8000/ai/documents/{{ $json.document_id }}/tags",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Webhook - Document Upload').item.json.token }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "tags",
              "value": "={{ $json.tags }}"
            }
          ]
        },
        "options": {}
      },
      "id": "update-tags",
      "name": "Update Document Tags",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [690, 300]
    },
    {
      "parameters": {
        "url": "=http://host.docker.internal:8000/ai/documents/{{ $('Webhook - Document Upload').item.json.document_id }}/status",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "method": "PATCH",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Webhook - Document Upload').item.json.token }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "status",
              "value": "completed"
            }
          ]
        },
        "options": {}
      },
      "id": "mark-complete",
      "name": "Mark as Completed",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [910, 300]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={ \"success\": true, \"document_id\": {{ $('Webhook - Document Upload').item.json.document_id }}, \"status\": \"completed\", \"tags\": {{ $('Process Document').item.json.tags }} }",
        "options": {}
      },
      "id": "respond-success",
      "name": "Respond - Success",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1130, 300]
    },
    {
      "parameters": {
        "url": "=http://host.docker.internal:8000/ai/documents/{{ $('Webhook - Document Upload').item.json.document_id }}/status",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "method": "PATCH",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Authorization",
              "value": "=Bearer {{ $('Webhook - Document Upload').item.json.token }}"
            }
          ]
        },
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "status",
              "value": "failed"
            },
            {
              "name": "error",
              "value": "={{ $json.error }}"
            }
          ]
        },
        "options": {}
      },
      "id": "mark-failed",
      "name": "Mark as Failed",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.1,
      "position": [910, 500]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={ \"success\": false, \"document_id\": {{ $('Webhook - Document Upload').item.json.document_id }}, \"status\": \"failed\", \"error\": \"Processing failed\" }",
        "options": {}
      },
      "id": "respond-error",
      "name": "Respond - Error",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1130, 500]
    }
  ],
  "connections": {
    "Webhook - Document Upload": {
      "main": [
        [
          {
            "node": "Process Document",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Document": {
      "main": [
        [
          {
            "node": "Update Document Tags",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update Document Tags": {
      "main": [
        [
          {
            "node": "Mark as Completed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mark as Completed": {
      "main": [
        [
          {
            "node": "Respond - Success",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Document": {
      "error": [
        [
          {
            "node": "Mark as Failed",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Mark as Failed": {
      "main": [
        [
          {
            "node": "Respond - Error",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {},
  "versionId": "1",
  "id": "boq-pdf-auto-processing",
  "meta": {
    "instanceId": "boq-production"
  },
  "tags": []
}
